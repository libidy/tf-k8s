{%- set namespace = properties["namespace"] -%}
{%- set name = properties["name"] -%}

#!/bin/bash

pushd ./k8s_config

if [[ ! $(kubectl get namespaces | grep {{ namespace }}) ]]; then
  kubectl create -f namespace.yaml
fi

mv nfs_tensorboard.yaml nfs_tensorboard.yaml.tmp
home=${HOME//\//\\/}
sed "s/HOME_DIR_PLACEHOLDER/${home}/g" nfs_tensorboard.yaml.tmp 1>nfs_tensorboard.yaml 2>/dev/null
rm nfs_tensorboard.yaml.tmp
kubectl create -f nfs_tensorboard.yaml


attempt=0
while true; do
  nfs_server_cluster_ip=`kubectl get services {{ name }}-nfs-server-tensorboard --namespace={{ namespace }} -o=jsonpath={.spec.clusterIP}`
  if [[ "$?" == 0 ]]; then
    break
  else
    if (( attempt > 10 )); then
      echo "Timeout. NFS SERVER ERROR!"
      exit 2
    fi
    attempt=$((attempt+1))
    sleep 3
  fi
done

mv tensorboard.yaml tensorboard.yaml.tmp
sed "s/server:.*$/server: ${nfs_server_cluster_ip}/g" tensorboard.yaml.tmp 1>tensorboard.yaml 2>/dev/null
rm tensorboard.yaml.tmp
kubectl create -f tensorboard.yaml

popd
